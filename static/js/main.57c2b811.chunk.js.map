{"version":3,"sources":["DisplayEgg.js","Components/Ia.js","Components/CharacterChoice.js","App.js","serviceWorker.js","index.js"],"names":["DisplayEgg","_ref","egg","onSelectEgg","areEggsSelected","isBattlefieldDisplayed","react_default","a","createElement","className","Col","Card","body","inverse","color","src","image","alt","name","CardTitle","CardText","farming","onClick","Ia","hitMethod","IAName","IAHitpoints","selectedEggs","displayNoneButton","Container","Row","length","Button","CharacterChoice","onSelectCharacter","character","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","randomizeAPIDisplay","apiResponse","temporaryValue","randomIndex","currentIndex","Math","floor","random","selectNumberOfDisplay","apiRandomizedResponse","displayNumber","selectedDisplays","i","push","throwEggsToIA","farminglevel","state","hitpoints","setState","slice","isSelectCharacterIA","clementCharacter","throwEggsToUser","selectedEggsIA","userHitpoints","updateArray","prevState","concat","toConsumableArray","selectEgg","eggsRandomizedFromApi","selectCharacter","isSelectedCharacter","isCharacterSelected","charactersRandomizedFromApi","isTryAgainDisplay","isSelectedCharacterIA","id","_this2","fetch","then","eggsFromAPI","json","eggsData","eggsToRandomize","eggsToDisplay","charsFromAPI","charsData","charsToRandomize","charsToDisplay","_this3","map","src_Components_CharacterChoice","key","src_DisplayEgg_0","fluid","xs","Components_Ia","offset","size","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.57c2b811.chunk.js","sourcesContent":["import React from 'react'\nimport \"./DisplayEgg.css\";\nimport { Card, CardTitle, CardText, Col } from 'reactstrap';\n\nconst DisplayEgg = ({ egg, onSelectEgg, areEggsSelected, isBattlefieldDisplayed }) => {\n    return (\n        <article className='card'>\n            <Col>\n            {isBattlefieldDisplayed ?\n                <Card body inverse color=\"warning\"> <img src={egg.image} alt={egg.name} className=\"egg\" />\n                    <CardTitle className=\"eggsTitle\">{egg.name}</CardTitle>\n                    {!areEggsSelected && <CardText className=\"eggsText\">Attack Points: {egg.farming}</CardText>}\n                </Card>\n            : <Card onClick={() => onSelectEgg(egg)} body inverse color=\"warning\"><img src={egg.image} alt={egg.name} className=\"egg\" />\n              <CardTitle className=\"eggsTitle\">{egg.name}</CardTitle>\n             {!areEggsSelected && <CardText className=\"eggsText\">Attack Points: {egg.farming}</CardText>}\n    </Card>}\n                    \n            </Col>\n        </article>\n    )\n}\n\nexport default DisplayEgg;\n","import React from 'react';\nimport { Container, Row, Col, Button } from 'reactstrap';\nconst Ia = ({hitMethod, IAName, IAHitpoints, selectedEggs, displayNoneButton}) => {\n    return ( \n        <section className='card text-white bg-dark mb-3'>\n            <Container>\n                <Row>\n                    <div className='picture'><img src={IAName.image} className=\"card-img-top\" alt={IAName.name}/></div>\n                    <p>{IAName.name}</p>  <br></br>\n                    <Col><img src=\"https://i.pinimg.com/originals/d3/65/d8/d365d88fb1a2d967df2efce34f80fbce.png\" className=\"life\" alt=\"life\"/></Col>\n                    <Col><p>{IAHitpoints}</p></Col>\n                    {displayNoneButton && selectedEggs.length > 0 && <Button onClick={hitMethod}>Hit the opponent !</Button>}\n                </Row>\n            </Container>\n        </section>\n    );\n}\n\nexport default Ia;\n","import React from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport \"./CharacterChoice.css\"\n\nconst CharacterChoice = ({IAName, IAHitpoints, hitMethod, onSelectCharacter, character}) => {\n    return (\n        <section className='card text-white bg-dark mb-3'>\n            <Container onClick={() => onSelectCharacter(character)}>\n                <Row>\n                    <div className='picture'><img src={IAName.image} className=\"card-img-top imgSize\" alt={IAName.name}/></div>\n                    <p>{IAName.name}</p>  \n                    <Col><img src=\"https://i.pinimg.com/originals/d3/65/d8/d365d88fb1a2d967df2efce34f80fbce.png\" className=\"life\" alt=\"life\"/></Col>\n                    <Col><p>{IAHitpoints}</p></Col>\n                    <button onClick={hitMethod} className=\"hitButton\">Hit the opponent !</button>\n                </Row>\n            </Container>\n        </section>\n    )\n}\n\n\nexport default CharacterChoice","import React, { Component } from 'react';\nimport DisplayEgg from \"./DisplayEgg\";\nimport { Container, Row, Col, Button} from 'reactstrap';\nimport './App.css';\nimport Ia from './Components/Ia';\nimport CharacterChoice from './Components/CharacterChoice';\n\n\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      charactersRandomizedFromApi: [],\n      eggsRandomizedFromApi: [],\n      IAHitpoints: \"20\",\n      userHitpoints: \"20\",\n      selectedEggs: [],\n      selectedEggsIA: [],\n      isSelectedCharacter: [],\n      isSelectCharacterIA: [],\n      isBattlefieldDisplayed: false,\n      isCharacterSelected: false,\n      areEggsSelected: false,\n      clementCharacter : {\n        id: \"5cac51240d488f0da6151c38\",\n        image:\"https://i.imgur.com/erXJsNE.png\",\n        name: \"Clément Bechetoille\",\n      },\n      displayNoneButton : true,\n    }\n  }\n  componentDidMount() {\n    fetch('http://easteregg.wildcodeschool.fr/api/eggs')\n      .then(eggsFromAPI => eggsFromAPI.json())\n      .then(eggsData => {\n        let eggsToRandomize = this.randomizeAPIDisplay(eggsData);\n        let eggsToDisplay = this.selectNumberOfDisplay(eggsToRandomize, 30)\n        this.setState({ eggsRandomizedFromApi: eggsToDisplay })\n\n      }\n      );\n\n    fetch('http://easteregg.wildcodeschool.fr/api/characters')\n      .then(charsFromAPI => charsFromAPI.json())\n      .then(charsData => {\n        let charsToRandomize = this.randomizeAPIDisplay(charsData);\n        let charsToDisplay = this.selectNumberOfDisplay(charsToRandomize, 10)\n        this.setState({ charactersRandomizedFromApi: charsToDisplay })\n      }\n      );\n      \n  };\n  randomizeAPIDisplay = (apiResponse) => {\n    let currentIndex = apiResponse.length, temporaryValue, randomIndex;\n\n    while (0 !== currentIndex) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n\n      temporaryValue = apiResponse[currentIndex];\n      apiResponse[currentIndex] = apiResponse[randomIndex];\n      apiResponse[randomIndex] = temporaryValue;\n    };\n    return apiResponse\n  };\n\n  selectNumberOfDisplay = (apiRandomizedResponse, displayNumber) => {\n    let selectedDisplays = []\n    for (let i = 0; i < displayNumber; i++) {\n      selectedDisplays.push(apiRandomizedResponse[i])\n    }\n    return selectedDisplays\n  };\n\n\n\n  throwEggsToIA = () => {\n    let farminglevel = this.state.selectedEggs[0].farming;\n    const hitpoints = this.state.IAHitpoints;\n    this.setState({ IAHitpoints: hitpoints - farminglevel, selectedEggs : this.state.selectedEggs.slice(1) });\n    hitpoints <= 14 && this.setState({isSelectCharacterIA : this.state.clementCharacter})\n  };\n\n  throwEggsToUser = () => {\n    let farminglevel = this.state.selectedEggsIA[0].farming;\n    const hitpoints = this.state.userHitpoints;\n    this.setState({ userHitpoints: hitpoints - farminglevel, selectedEggsIA : this.state.selectedEggsIA.slice(1) })\n  };\n\n  updateArray = (egg) => {\n    this.setState(function (prevState) {\n      return {\n        selectedEggs: this.state.selectedEggs.length === 0 ?\n          [egg] : [...prevState.selectedEggs, egg],\n      };\n    }\n    )\n  };\n\n  selectEgg = (egg) => {\n    this.state.selectedEggs.length < 3 && this.setState({ selectedEggs: [...this.state.selectedEggs, egg],  eggsRandomizedFromApi : this.state.eggsRandomizedFromApi.slice(1) })\n    this.state.selectedEggs.length === 2 && this.setState({ isBattlefieldDisplayed: true, areEggsSelected: true })\n    !this.state.areEggsSelected && this.setState({ selectedEggsIA: [this.state.eggsRandomizedFromApi[6],\n                                    this.state.eggsRandomizedFromApi[9], this.state.eggsRandomizedFromApi[12]]})\n  };\n\n  selectCharacter = (character) => {\n    this.state.selectedEggs.length < 1 && this.setState({ isSelectedCharacter: [...this.state.isSelectedCharacter, character] })\n    this.state.isSelectedCharacter.length === 0 && this.setState({ isCharacterSelected: true })\n    !this.state.isCharacterSelected && this.setState({ isSelectCharacterIA: this.state.charactersRandomizedFromApi[3] })\n  }\n\n  isTryAgainDisplay = () => {\n    this.setState({isBattlefieldDisplayed: false,})\n    this.setState({isCharacterSelected: false,})\n    this.setState({areEggsSelected: false,})\n    this.setState({isSelectedCharacter: []})\n    this.setState({isSelectedCharacterIA: []})\n    this.setState({IAHitpoints: \"20\",})\n    this.setState({userHitpoints: \"20\",})\n  }\n\n\n  render() {\n    return (\n      <div className=\"App battleField\">\n\n        {!this.state.isCharacterSelected && <Container>\n          <Row>\n            {this.state.charactersRandomizedFromApi.length === 0 \n            ? <p>loading</p> \n            : this.state.charactersRandomizedFromApi.map(\n                    character => <CharacterChoice key={character.id} character={character} \n                                                  IAName={character} onSelectCharacter={this.selectCharacter} \n                                                  IAHitpoints={this.state.IAHitpoints} />)\n            }\n          </Row>\n        </Container>\n        }\n        {!this.state.isBattlefieldDisplayed && this.state.isCharacterSelected && <Container>\n          <Row>\n            {this.state.eggsRandomizedFromApi.length === 0 \n            ? <p>loading</p> \n            : this.state.eggsRandomizedFromApi.map(egg => <DisplayEgg key={egg.id} egg={egg} \n                                                                      areEggsSelected={this.state.selectedEggs} \n                                                                      onSelectEgg={this.selectEgg} />)\n            }\n          </Row>\n        </Container>\n        }\n\n        {this.state.areEggsSelected && <Container fluid>\n          <Row>\n\n            <Col xs={2}>\n              <div className=\"user1 d-flex align-items-center bg-dark\">\n                {this.state.charactersRandomizedFromApi.length === 0 \n                  ? <p>Wait</p>\n                  : <Ia selectedEggs={this.state.selectedEggs} hitMethod={() => this.throwEggsToIA(this.throwEggsToUser())} \n                        IAHitpoints={this.state.userHitpoints} IAName={this.state.isSelectedCharacter[0]} \n                        displayNoneButton = {this.state.displayNoneButton}/>} \n              </div>\n            </Col>\n\n            <Col xs={2}>\n              <div>\n                { this.state.selectedEggs.length === 0 && this.state.selectedEggsIA.length === 0\n                 ? this.state.userHitpoints > this.state.IAHitpoints \n                 ? <h1 className=\"endMessageWin\">Well Done {this.state.isSelectedCharacter.name} Omagad You Good BrO !</h1>\n                 : <h1 className=\"endMessageLose\">HAHAHA {this.state.isSelectedCharacter.name} Try again loser !</h1> \n                 : this.state.selectedEggs.length === 0 \n                 ? <p className=\"noMoreEggs\"></p> \n                 : this.state.selectedEggs.map(egg => <DisplayEgg isBattlefieldDisplayed={this.state.isBattlefieldDisplayed}\n                                                                  key={egg.id} egg={egg}/>)}  \n              </div>\n            </Col>\n            \n            <Col offset={4}> {this.state.areEggsSelected === true && this.state.selectedEggs.length === 0 && <Button onClick={() => this.isTryAgainDisplay()} className=\"btnTryAgain\" size=\"lg\" color=\"warning\">Try Again</Button>}</Col>\n\n            <Col xs={2}>\n              <div className = \"omagad\">{this.state.selectedEggs.length === 0 && this.state.selectedEggsIA.length === 0\n                  ? <p></p> \n                  : this.state.selectedEggsIA.length === 0 \n                  ? <p className=\"noMoreEggs\"></p> \n                  : this.state.selectedEggsIA.map(egg => <DisplayEgg isBattlefieldDisplayed={this.state.isBattlefieldDisplayed} \n                                                                     key={egg.id} egg={egg}/>)}  </div></Col>\n            \n            <Col xs={2}>\n              <div className=\"user2 d-flex align-items-center bg-dark\">{this.state.charactersRandomizedFromApi.length === 0 \n                ? <p>Wait</p>\n                : <Ia selectedEggs={this.state.selectedEggsIA}\n                      IAHitpoints={this.state.IAHitpoints} \n                      IAName={this.state.isSelectCharacterIA}/>}\n              </div>\n            </Col>\n          </Row>\n        </Container>\n        }\n        \n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}